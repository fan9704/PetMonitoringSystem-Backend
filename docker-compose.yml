version: '2.2'
services:
  db:
    image: postgres:13.2-alpine
    restart: always
    container_name: postgreSQL-Database
    environment:
#      POSTGRES_DB: PET
      POSTGRES_MULTIPLE_DATABASES: TEST,ZABBIX,PET
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgAdmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: b10923057@gemail.yuntech.edu.tw
      PGADMIN_DEFAULT_PASSWORD: 123456
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "9101:80"
    links:
      - "db:pgsql-server"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms212m -Xmx212m"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.1
    container_name: kibana
    ports:
      - "5601:5601"
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:7.9.1
    container_name: logstash
#    volumes:
#      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "12201:12201/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
  rabbitmq:
    image: rabbitmq:3.9.10-management
    hostname: rabbitmq
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
      - "1883:1883"
      - "61613:61613"
      - "15674:15674"
      - "15675:15675"
  redis:
    restart: always
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - /data/redis-data:/data

#  prometheus:
#    image: prom/prometheus
#    restart: 'no'
#    volumes:
#      - prometheus_data:/prometheus
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
##    network_mode: host
#
#  grafana:
#    image: grafana/grafana
#    environment:
#      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
#    restart: 'no'
#    volumes:
#      - grafana_data:/var/lib/grafana
##    network_mode: host
#    ports:
#      - "3000:3000"
#    depends_on:
#      - prometheus
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:latest
    environment:
      DB_SERVER_HOST: db
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: ZABBIX
    ports:
      - "10051:10051"
    volumes:
      - ./zabbix/alertscripts:/usr/lib/zabbix/alertscripts
      - ./zabbix/externalscripts:/usr/lib/zabbix/externalscripts
      - ./zabbix/modules:/var/lib/zabbix/modules
      - ./zabbix/enc:/var/lib/zabbix/enc
      - ./zabbix/ssh_keys:/var/lib/zabbix/ssh_keys
      - ./zabbix/mibs:/var/lib/zabbix/mibs
      - ./zabbix/ssl/certs:/etc/zabbix/ssl/certs:ro
      - ./zabbix/ssl/keys:/etc/zabbix/ssl/keys:ro
      - ./zabbix/ssl/ca:/etc/zabbix/ssl/ca:ro
    restart: unless-stopped

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:latest
    environment:
      DB_SERVER_HOST: db
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: ZABBIX
    ports:
      - "80:80"
    volumes:
      - ./zabbix/alertscripts:/usr/lib/zabbix/alertscripts
      - ./zabbix/externalscripts:/usr/lib/zabbix/externalscripts
      - ./zabbix/modules:/var/lib/zabbix/modules
      - ./zabbix/enc:/var/lib/zabbix/enc
      - ./zabbix/ssh_keys:/var/lib/zabbix/ssh_keys
      - ./zabbix/mibs:/var/lib/zabbix/mibs
      - ./zabbix/ssl/certs:/etc/zabbix/ssl/certs:ro
      - ./zabbix/ssl/keys:/etc/zabbix/ssl/keys:ro
      - ./zabbix/ssl/ca:/etc/zabbix/ssl/ca:ro
    restart: unless-stopped

  zabbix-agent:
    image: zabbix/zabbix-agent:latest
    environment:
      ZBX_HOSTNAME: zabbix-agent
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: "10051"
      ZBX_ENABLE_REMOTE_COMMANDS: "1"
    volumes:
      - /:/mnt/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped



volumes:
  db-data:
  prometheus_data: { }
  grafana_data: { }
  elasticsearch-data:
    driver: local